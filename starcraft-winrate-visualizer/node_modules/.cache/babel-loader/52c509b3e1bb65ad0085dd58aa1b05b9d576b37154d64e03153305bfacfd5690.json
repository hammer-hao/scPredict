{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hammerhao\\\\OneDrive\\\\Documents\\\\GitHub\\\\scPredict\\\\starcraft-winrate-visualizer\\\\src\\\\components\\\\WinRateChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WinRateChart = ({\n  data\n}) => {\n  _s();\n  const [chartData, setChartData] = useState({});\n  useEffect(() => {\n    const timeLabels = data.map(item => item.time);\n    const winRates = data.map(item => item.winRate);\n    setChartData({\n      labels: timeLabels,\n      datasets: [{\n        label: 'Win Rate Over Time',\n        data: winRates,\n        borderColor: 'rgba(75,192,192,1)',\n        backgroundColor: 'rgba(75,192,192,0.2)',\n        pointBackgroundColor: 'rgba(75,192,192,1)',\n        pointBorderColor: '#fff',\n        fill: true\n      }]\n    });\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Win Rate Over Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(WinRateChart, \"qLlYZUJv3crif/0xI+dehEQf0o0=\");\n_c = WinRateChart;\nexport default WinRateChart;\nvar _c;\n$RefreshReg$(_c, \"WinRateChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","jsxDEV","_jsxDEV","WinRateChart","data","_s","chartData","setChartData","timeLabels","map","item","time","winRates","winRate","labels","datasets","label","borderColor","backgroundColor","pointBackgroundColor","pointBorderColor","fill","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hammerhao/OneDrive/Documents/GitHub/scPredict/starcraft-winrate-visualizer/src/components/WinRateChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst WinRateChart = ({ data }) => {\r\n  const [chartData, setChartData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const timeLabels = data.map(item => item.time);\r\n    const winRates = data.map(item => item.winRate);\r\n\r\n    setChartData({\r\n      labels: timeLabels,\r\n      datasets: [\r\n        {\r\n          label: 'Win Rate Over Time',\r\n          data: winRates,\r\n          borderColor: 'rgba(75,192,192,1)',\r\n          backgroundColor: 'rgba(75,192,192,0.2)',\r\n          pointBackgroundColor: 'rgba(75,192,192,1)',\r\n          pointBorderColor: '#fff',\r\n          fill: true,\r\n        },\r\n      ],\r\n    });\r\n  }, [data]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Win Rate Over Time</h2>\r\n      <Line data={chartData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WinRateChart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAGJ,IAAI,CAACK,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC;IAC9C,MAAMC,QAAQ,GAAGR,IAAI,CAACK,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,OAAO,CAAC;IAE/CN,YAAY,CAAC;MACXO,MAAM,EAAEN,UAAU;MAClBO,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,oBAAoB;QAC3BZ,IAAI,EAAEQ,QAAQ;QACdK,WAAW,EAAE,oBAAoB;QACjCC,eAAe,EAAE,sBAAsB;QACvCC,oBAAoB,EAAE,oBAAoB;QAC1CC,gBAAgB,EAAE,MAAM;QACxBC,IAAI,EAAE;MACR,CAAC;IAEL,CAAC,CAAC;EACJ,CAAC,EAAE,CAACjB,IAAI,CAAC,CAAC;EAEV,oBACEF,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BxB,OAAA,CAACF,IAAI;MAACI,IAAI,EAAEE;IAAU;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV,CAAC;AAACrB,EAAA,CA7BIF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AA+BlB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}