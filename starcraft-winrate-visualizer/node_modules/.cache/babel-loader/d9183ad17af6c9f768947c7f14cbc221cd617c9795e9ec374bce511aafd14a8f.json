{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hammerhao\\\\OneDrive\\\\Documents\\\\GitHub\\\\scPredict\\\\starcraft-winrate-visualizer\\\\src\\\\LineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Chart, registerables } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst LineChart = ({\n  winRates\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstanceRef = useRef(null);\n  useEffect(() => {\n    if (chartInstanceRef.current) {\n      chartInstanceRef.current.destroy();\n    }\n    const ctx = chartRef.current.getContext('2d');\n    chartInstanceRef.current = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: winRates.map((_, index) => `Time ${index}`),\n        datasets: [{\n          label: 'Win Rate Over Time',\n          data: winRates,\n          fill: false,\n          borderColor: 'rgba(75,192,192,1)'\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          x: {\n            type: 'category'\n          },\n          y: {\n            type: 'linear',\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }, [winRates]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: chartRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n};\n_s(LineChart, \"0kidk2EAizBYKgfY+KQx4ULbe78=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","registerables","jsxDEV","_jsxDEV","register","LineChart","winRates","_s","chartRef","chartInstanceRef","current","destroy","ctx","getContext","type","data","labels","map","_","index","datasets","label","fill","borderColor","options","responsive","scales","x","y","beginAtZero","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hammerhao/OneDrive/Documents/GitHub/scPredict/starcraft-winrate-visualizer/src/LineChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { Chart, registerables } from 'chart.js';\r\nChart.register(...registerables);\r\n\r\nconst LineChart = ({ winRates }) => {\r\n  const chartRef = useRef(null);\r\n  const chartInstanceRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (chartInstanceRef.current) {\r\n      chartInstanceRef.current.destroy();\r\n    }\r\n\r\n    const ctx = chartRef.current.getContext('2d');\r\n    chartInstanceRef.current = new Chart(ctx, {\r\n      type: 'line',\r\n      data: {\r\n        labels: winRates.map((_, index) => `Time ${index}`),\r\n        datasets: [\r\n          {\r\n            label: 'Win Rate Over Time',\r\n            data: winRates,\r\n            fill: false,\r\n            borderColor: 'rgba(75,192,192,1)',\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        scales: {\r\n          x: {\r\n            type: 'category',\r\n          },\r\n          y: {\r\n            type: 'linear',\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n  }, [winRates]);\r\n\r\n  return <canvas ref={chartRef} />;\r\n};\r\n\r\nexport default LineChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,KAAK,EAAEC,aAAa,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChDH,KAAK,CAACI,QAAQ,CAAC,GAAGH,aAAa,CAAC;AAEhC,MAAMI,SAAS,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMU,gBAAgB,GAAGV,MAAM,CAAC,IAAI,CAAC;EAErCD,SAAS,CAAC,MAAM;IACd,IAAIW,gBAAgB,CAACC,OAAO,EAAE;MAC5BD,gBAAgB,CAACC,OAAO,CAACC,OAAO,CAAC,CAAC;IACpC;IAEA,MAAMC,GAAG,GAAGJ,QAAQ,CAACE,OAAO,CAACG,UAAU,CAAC,IAAI,CAAC;IAC7CJ,gBAAgB,CAACC,OAAO,GAAG,IAAIV,KAAK,CAACY,GAAG,EAAE;MACxCE,IAAI,EAAE,MAAM;MACZC,IAAI,EAAE;QACJC,MAAM,EAAEV,QAAQ,CAACW,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAM,QAAOA,KAAM,EAAC,CAAC;QACnDC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,oBAAoB;UAC3BN,IAAI,EAAET,QAAQ;UACdgB,IAAI,EAAE,KAAK;UACXC,WAAW,EAAE;QACf,CAAC;MAEL,CAAC;MACDC,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDb,IAAI,EAAE;UACR,CAAC;UACDc,CAAC,EAAE;YACDd,IAAI,EAAE,QAAQ;YACde,WAAW,EAAE;UACf;QACF;MACF;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACvB,QAAQ,CAAC,CAAC;EAEd,oBAAOH,OAAA;IAAQ2B,GAAG,EAAEtB;EAAS;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAClC,CAAC;AAAC3B,EAAA,CAvCIF,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AAyCf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}