{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hammerhao\\\\OneDrive\\\\Documents\\\\GitHub\\\\scPredict\\\\starcraft-winrate-visualizer\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport WinRateChart from './components/WinRateChart';\nimport FileUpload from './components/FileUpload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [winRates, setWinRates] = useState([]);\n  const handleUploadSuccess = data => {\n    if (data && data.winrates) {\n      try {\n        const parsedWinRates = data.winrates;\n        if (Array.isArray(parsedWinRates)) {\n          setWinRates(parsedWinRates);\n        } else {\n          console.error('Parsed data is not an array:', parsedWinRates);\n          setWinRates([]);\n        }\n      } catch (error) {\n        console.error('Error handling upload success:', error);\n        setWinRates([]);\n      }\n    } else {\n      console.error('Invalid response data:', data);\n      setWinRates([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Starcraft 2 Win Rate Visualizer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(FileUpload, {\n        onUploadSuccess: handleUploadSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), winRates.length > 0 ? /*#__PURE__*/_jsxDEV(WinRateChart, {\n        data: winRates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 67\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mF0LOu82GZtlMf+3L4P5oMwgiuM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","WinRateChart","FileUpload","jsxDEV","_jsxDEV","App","_s","winRates","setWinRates","handleUploadSuccess","data","winrates","parsedWinRates","Array","isArray","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onUploadSuccess","length","_c","$RefreshReg$"],"sources":["C:/Users/hammerhao/OneDrive/Documents/GitHub/scPredict/starcraft-winrate-visualizer/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport WinRateChart from './components/WinRateChart';\nimport FileUpload from './components/FileUpload';\n\nfunction App() {\n  const [winRates, setWinRates] = useState([]);\n\n  const handleUploadSuccess = (data) => {\n    if (data && data.winrates) {\n      try {\n        const parsedWinRates = data.winrates;\n        if (Array.isArray(parsedWinRates)) {\n          setWinRates(parsedWinRates);\n        } else {\n          console.error('Parsed data is not an array:', parsedWinRates);\n          setWinRates([]);\n        }\n      } catch (error) {\n        console.error('Error handling upload success:', error);\n        setWinRates([]);\n      }\n    } else {\n      console.error('Invalid response data:', data);\n      setWinRates([]);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Starcraft 2 Win Rate Visualizer</h1>\n      </header>\n      <main>\n        <FileUpload onUploadSuccess={handleUploadSuccess} />\n        {winRates.length > 0 ? <WinRateChart data={winRates} /> : <p>No data available</p>}\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,mBAAmB,GAAIC,IAAI,IAAK;IACpC,IAAIA,IAAI,IAAIA,IAAI,CAACC,QAAQ,EAAE;MACzB,IAAI;QACF,MAAMC,cAAc,GAAGF,IAAI,CAACC,QAAQ;QACpC,IAAIE,KAAK,CAACC,OAAO,CAACF,cAAc,CAAC,EAAE;UACjCJ,WAAW,CAACI,cAAc,CAAC;QAC7B,CAAC,MAAM;UACLG,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEJ,cAAc,CAAC;UAC7DJ,WAAW,CAAC,EAAE,CAAC;QACjB;MACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDR,WAAW,CAAC,EAAE,CAAC;MACjB;IACF,CAAC,MAAM;MACLO,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEN,IAAI,CAAC;MAC7CF,WAAW,CAAC,EAAE,CAAC;IACjB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBd,OAAA;MAAQa,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5Bd,OAAA;QAAAc,QAAA,EAAI;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACTlB,OAAA;MAAAc,QAAA,gBACEd,OAAA,CAACF,UAAU;QAACqB,eAAe,EAAEd;MAAoB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACnDf,QAAQ,CAACiB,MAAM,GAAG,CAAC,gBAAGpB,OAAA,CAACH,YAAY;QAACS,IAAI,EAAEH;MAAS;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAGlB,OAAA;QAAAc,QAAA,EAAG;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAChB,EAAA,CAlCQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}