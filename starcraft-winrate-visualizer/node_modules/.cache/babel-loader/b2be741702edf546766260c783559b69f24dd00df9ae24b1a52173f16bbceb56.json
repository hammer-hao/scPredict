{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{Chart,registerables}from'chart.js';import{jsx as _jsx}from\"react/jsx-runtime\";Chart.register(...registerables);const LineChart=_ref=>{let{winRates}=_ref;const chartRef=useRef(null);const chartInstanceRef=useRef(null);useEffect(()=>{if(chartInstanceRef.current){chartInstanceRef.current.destroy();}const ctx=chartRef.current.getContext('2d');chartInstanceRef.current=new Chart(ctx,{type:'line',data:{labels:winRates.map((_,index)=>\"Time \".concat(index)),datasets:[{label:'Win Rate Over Time',data:winRates,fill:false,borderColor:'rgba(75,192,192,1)'}]},options:{responsive:true,scales:{x:{type:'category'},y:{type:'linear',beginAtZero:true}}}});},[winRates]);return/*#__PURE__*/_jsx(\"canvas\",{ref:chartRef});};export default LineChart;","map":{"version":3,"names":["React","useEffect","useRef","Chart","registerables","jsx","_jsx","register","LineChart","_ref","winRates","chartRef","chartInstanceRef","current","destroy","ctx","getContext","type","data","labels","map","_","index","concat","datasets","label","fill","borderColor","options","responsive","scales","x","y","beginAtZero","ref"],"sources":["C:/Users/hammerhao/OneDrive/Documents/GitHub/scPredict/starcraft-winrate-visualizer/src/LineChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { Chart, registerables } from 'chart.js';\r\nChart.register(...registerables);\r\n\r\nconst LineChart = ({ winRates }) => {\r\n  const chartRef = useRef(null);\r\n  const chartInstanceRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (chartInstanceRef.current) {\r\n      chartInstanceRef.current.destroy();\r\n    }\r\n\r\n    const ctx = chartRef.current.getContext('2d');\r\n    chartInstanceRef.current = new Chart(ctx, {\r\n      type: 'line',\r\n      data: {\r\n        labels: winRates.map((_, index) => `Time ${index}`),\r\n        datasets: [\r\n          {\r\n            label: 'Win Rate Over Time',\r\n            data: winRates,\r\n            fill: false,\r\n            borderColor: 'rgba(75,192,192,1)',\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        scales: {\r\n          x: {\r\n            type: 'category',\r\n          },\r\n          y: {\r\n            type: 'linear',\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n  }, [winRates]);\r\n\r\n  return <canvas ref={chartRef} />;\r\n};\r\n\r\nexport default LineChart;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAChD,OAASC,KAAK,CAAEC,aAAa,KAAQ,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAChDH,KAAK,CAACI,QAAQ,CAAC,GAAGH,aAAa,CAAC,CAEhC,KAAM,CAAAI,SAAS,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC7B,KAAM,CAAAE,QAAQ,CAAGT,MAAM,CAAC,IAAI,CAAC,CAC7B,KAAM,CAAAU,gBAAgB,CAAGV,MAAM,CAAC,IAAI,CAAC,CAErCD,SAAS,CAAC,IAAM,CACd,GAAIW,gBAAgB,CAACC,OAAO,CAAE,CAC5BD,gBAAgB,CAACC,OAAO,CAACC,OAAO,CAAC,CAAC,CACpC,CAEA,KAAM,CAAAC,GAAG,CAAGJ,QAAQ,CAACE,OAAO,CAACG,UAAU,CAAC,IAAI,CAAC,CAC7CJ,gBAAgB,CAACC,OAAO,CAAG,GAAI,CAAAV,KAAK,CAACY,GAAG,CAAE,CACxCE,IAAI,CAAE,MAAM,CACZC,IAAI,CAAE,CACJC,MAAM,CAAET,QAAQ,CAACU,GAAG,CAAC,CAACC,CAAC,CAAEC,KAAK,WAAAC,MAAA,CAAaD,KAAK,CAAE,CAAC,CACnDE,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,oBAAoB,CAC3BP,IAAI,CAAER,QAAQ,CACdgB,IAAI,CAAE,KAAK,CACXC,WAAW,CAAE,oBACf,CAAC,CAEL,CAAC,CACDC,OAAO,CAAE,CACPC,UAAU,CAAE,IAAI,CAChBC,MAAM,CAAE,CACNC,CAAC,CAAE,CACDd,IAAI,CAAE,UACR,CAAC,CACDe,CAAC,CAAE,CACDf,IAAI,CAAE,QAAQ,CACdgB,WAAW,CAAE,IACf,CACF,CACF,CACF,CAAC,CAAC,CACJ,CAAC,CAAE,CAACvB,QAAQ,CAAC,CAAC,CAEd,mBAAOJ,IAAA,WAAQ4B,GAAG,CAAEvB,QAAS,CAAE,CAAC,CAClC,CAAC,CAED,cAAe,CAAAH,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}